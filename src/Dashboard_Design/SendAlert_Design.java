/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Dashboard_Design;


import Main.DBConnection;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Base64;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author Darkheart
 */
public class SendAlert_Design extends javax.swing.JPanel {

    public static Connection Conn = null;
    public Statement stmt = null;
    public PreparedStatement pst = null;
    public String sql = "";
    public ResultSet rs = null;
    public boolean Focus = false;
    public static String SmsUsername;
    public static String SmsPassword;
    
    
    /**
     * Creates new form SendAlert_Design
     */
    public SendAlert_Design() {
        initComponents();
        Conn = DBConnection.getconn();
        
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SendAlertPanel = new javax.swing.JPanel();
        AlertGND = new javax.swing.JComboBox<>();
        AlertDivision = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        AlertTextArea = new javax.swing.JTextArea();
        TextAreaLBL = new javax.swing.JLabel();
        SendBTN = new javax.swing.JButton();
        LBLnames = new javax.swing.JLabel();
        AgeCategory = new javax.swing.JComboBox<>();
        Kandy = new javax.swing.JLabel();
        LKMap = new javax.swing.JLabel();
        AlertDistrict = new javax.swing.JComboBox<>();
        ACLBL = new javax.swing.JLabel();
        AGNDLBL = new javax.swing.JLabel();
        ADivisionLBL = new javax.swing.JLabel();
        ADistrictLBL = new javax.swing.JLabel();
        MainWigdetLBL4 = new javax.swing.JLabel();

        setMinimumSize(new java.awt.Dimension(0, 0));
        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(950, 510));

        SendAlertPanel.setMinimumSize(new java.awt.Dimension(950, 510));
        SendAlertPanel.setOpaque(false);
        SendAlertPanel.setPreferredSize(new java.awt.Dimension(950, 510));
        SendAlertPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        AlertGND.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select G.N Division", "Mailapitiya" }));
        AlertGND.setBorder(null);
        AlertGND.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                AlertGNDFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                AlertGNDFocusLost(evt);
            }
        });
        AlertGND.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                AlertGNDMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                AlertGNDMouseExited(evt);
            }
        });
        SendAlertPanel.add(AlertGND, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 150, 200, 20));

        AlertDivision.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Division", "Pathahewaheta" }));
        AlertDivision.setBorder(null);
        AlertDivision.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                AlertDivisionFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                AlertDivisionFocusLost(evt);
            }
        });
        AlertDivision.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                AlertDivisionMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                AlertDivisionMouseExited(evt);
            }
        });
        SendAlertPanel.add(AlertDivision, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 100, 200, 20));

        AlertTextArea.setColumns(20);
        AlertTextArea.setRows(5);
        AlertTextArea.setText("Enter Text...");
        AlertTextArea.setBorder(null);
        AlertTextArea.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                AlertTextAreaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                AlertTextAreaFocusLost(evt);
            }
        });
        AlertTextArea.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                AlertTextAreaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                AlertTextAreaMouseExited(evt);
            }
        });
        jScrollPane1.setViewportView(AlertTextArea);

        SendAlertPanel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 270, 240, 110));

        TextAreaLBL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI_Images/SendAlert/SendTextBoxNormal.png"))); // NOI18N
        TextAreaLBL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                TextAreaLBLMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                TextAreaLBLMouseExited(evt);
            }
        });
        SendAlertPanel.add(TextAreaLBL, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 250, 310, 160));

        SendBTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI_Images/SendAlert/SendBTNNormal.png"))); // NOI18N
        SendBTN.setBorder(null);
        SendBTN.setContentAreaFilled(false);
        SendBTN.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/UI_Images/SendAlert/SendBTNSelect.png"))); // NOI18N
        SendBTN.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/UI_Images/SendAlert/SendBTNRoll.png"))); // NOI18N
        SendBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SendBTNActionPerformed(evt);
            }
        });
        SendAlertPanel.add(SendBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 420, 140, 50));

        LBLnames.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI_Images/SendAlert/SALBLbg.png"))); // NOI18N
        SendAlertPanel.add(LBLnames, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 30, 150, 270));

        AgeCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Age Category", "12-20", "20-30", "30-40", "40-50", "50-60", "60-80+" }));
        AgeCategory.setBorder(null);
        AgeCategory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                AgeCategoryMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                AgeCategoryMouseExited(evt);
            }
        });
        SendAlertPanel.add(AgeCategory, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 210, 200, 20));

        Kandy.setToolTipText("Kandy");
        Kandy.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Kandy.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                KandyMouseClicked(evt);
            }
        });
        SendAlertPanel.add(Kandy, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 290, 40, 20));

        LKMap.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Component 5 â€“ 1.png"))); // NOI18N
        SendAlertPanel.add(LKMap, new org.netbeans.lib.awtextra.AbsoluteConstraints(545, 40, 380, 400));

        AlertDistrict.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select District", "Kandy" }));
        AlertDistrict.setBorder(null);
        AlertDistrict.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                AlertDistrictFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                AlertDistrictFocusLost(evt);
            }
        });
        AlertDistrict.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                AlertDistrictMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                AlertDistrictMouseExited(evt);
            }
        });
        SendAlertPanel.add(AlertDistrict, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 40, 200, 20));

        ACLBL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI_Images/Register_DosePanel/DTextBoxNormal.png"))); // NOI18N
        ACLBL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ACLBLMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ACLBLMouseExited(evt);
            }
        });
        SendAlertPanel.add(ACLBL, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 200, 280, 50));

        AGNDLBL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI_Images/Register_DosePanel/DTextBoxNormal.png"))); // NOI18N
        AGNDLBL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                AGNDLBLMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                AGNDLBLMouseExited(evt);
            }
        });
        SendAlertPanel.add(AGNDLBL, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 140, 280, 50));

        ADivisionLBL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI_Images/Register_DosePanel/DTextBoxNormal.png"))); // NOI18N
        ADivisionLBL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ADivisionLBLMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ADivisionLBLMouseExited(evt);
            }
        });
        SendAlertPanel.add(ADivisionLBL, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 90, 280, 50));

        ADistrictLBL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI_Images/Register_DosePanel/DTextBoxNormal.png"))); // NOI18N
        ADistrictLBL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ADistrictLBLMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ADistrictLBLMouseExited(evt);
            }
        });
        SendAlertPanel.add(ADistrictLBL, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 30, 280, 50));

        MainWigdetLBL4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI_Images/DashNormalWidget/DashMainWidget.png"))); // NOI18N
        MainWigdetLBL4.setDoubleBuffered(true);
        MainWigdetLBL4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                MainWigdetLBL4MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                MainWigdetLBL4MouseExited(evt);
            }
        });
        SendAlertPanel.add(MainWigdetLBL4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 12, 930, 490));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(SendAlertPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(SendAlertPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void MainWigdetLBL4MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MainWigdetLBL4MouseExited
        MainWigdetLBL4.setIcon(new ImageIcon("src/UI_Images/DashNormalWidget/DashMainWidget.png"));
    }//GEN-LAST:event_MainWigdetLBL4MouseExited

    private void MainWigdetLBL4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MainWigdetLBL4MouseEntered
        MainWigdetLBL4.setIcon(new ImageIcon("src/UI_Images/DashRolloverWidget/DashMainWigdetRollover.png"));
    }//GEN-LAST:event_MainWigdetLBL4MouseEntered

    private void ADistrictLBLMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ADistrictLBLMouseEntered
        if(!Focus)
        {
            ADistrictLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxRoll.png"));
        }
    }//GEN-LAST:event_ADistrictLBLMouseEntered

    private void ADistrictLBLMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ADistrictLBLMouseExited
        if(!Focus)
        {
            ADistrictLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxNormal.png"));
        }
    }//GEN-LAST:event_ADistrictLBLMouseExited

    private void ADivisionLBLMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ADivisionLBLMouseEntered
        if(!Focus)
        {
            ADivisionLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxRoll.png"));
        }
    }//GEN-LAST:event_ADivisionLBLMouseEntered

    private void ADivisionLBLMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ADivisionLBLMouseExited
        if(!Focus)
        {
            ADivisionLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxNormal.png"));
        }
    }//GEN-LAST:event_ADivisionLBLMouseExited

    private void AGNDLBLMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AGNDLBLMouseEntered
        if(!Focus)
        {
            AGNDLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxRoll.png"));
        }
    }//GEN-LAST:event_AGNDLBLMouseEntered

    private void AGNDLBLMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AGNDLBLMouseExited
        if(!Focus)
        {
            AGNDLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxNormal.png"));
        }
    }//GEN-LAST:event_AGNDLBLMouseExited

    private void ACLBLMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ACLBLMouseEntered
        if(!Focus)
        {
            ACLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxRoll.png"));
        }
    }//GEN-LAST:event_ACLBLMouseEntered

    private void ACLBLMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ACLBLMouseExited
        if(!Focus)
        {
            ACLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxNormal.png"));
        }
    }//GEN-LAST:event_ACLBLMouseExited

    private void GetContacts(String Range1, String Range2)
    {
        String AgeRange1 = Range1;
        String AgeRange2 = Range2;
        String[] GetNumbers = null;
        int count = 0;
        
        sql = "SELECT * FROM People WHERE age BETWEEN ? And ? AND District = ? AND Division = ? AND GNDivision = ?";
        String CountNumbers = "SELECT COUNT(*) FROM People WHERE age BETWEEN ? And ? AND District = ? AND Division = ? AND GNDivision = ?";
        try 
        {
            pst = Conn.prepareStatement(sql);
            PreparedStatement pst2 = Conn.prepareStatement(CountNumbers);
            ResultSet rs2 = null;
            
            pst.setString(1, AgeRange1);
            pst.setString(2, AgeRange2);
            pst.setString(3, AlertDistrict.getSelectedItem().toString());
            pst.setString(4, AlertDivision.getSelectedItem().toString());
            pst.setString(5, AlertGND.getSelectedItem().toString());
            
            rs = pst.executeQuery();
            
            pst2.setString(1, AgeRange1);
            pst2.setString(2, AgeRange2);
            pst2.setString(3, AlertDistrict.getSelectedItem().toString());
            pst2.setString(4, AlertDivision.getSelectedItem().toString());
            pst2.setString(5, AlertGND.getSelectedItem().toString());
            
            
            rs2 = pst2.executeQuery();
            
            if (rs2.next()) 
            {
                GetNumbers = new String[rs2.getInt("COUNT(*)")];
            }
            

            if (rs.next() == false) 
            {
                System.out.println("No Contacts Found!");
                JOptionPane.showMessageDialog(null, "No Contacts Found!");
            } 
             
            else
            {
            do 
            {
                
                System.out.println("Geting Number : "+count);
                //GetNumbers = new String[]{rs.getString("Number")};
 
                GetNumbers[count] = "\"+94"+rs.getString("Number")+"\"";

                System.out.println("Number "+count+" is : "+rs.getString("Number"));
                count++;
            } 
            while (rs.next());
            }
            SendNotification(GetNumbers,"\""+AlertTextArea.getText()+"\"");
        }

        catch (SQLException ex) 
        {
            JOptionPane.showMessageDialog(null, ex.toString());
        }
    }
    
    private void SendBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SendBTNActionPerformed
        //String[] ContactsArray2 = new String[]{"\"+94766674810\"","\"+94775142377\""};
        //SendNotification(ContactsArray2);
        /*12-20
        20-30
        30-40
        50-60
        60-80+*/
        switch (AgeCategory.getSelectedIndex()) {
            case 1 -> GetContacts("12","20");
            case 2 -> GetContacts("20","30");
            case 3 -> GetContacts("30","40");
            case 4 -> GetContacts("40","50");
            case 5 -> GetContacts("50","60");
            case 6 -> GetContacts("60","90 or age>90");
            default -> {
            }
        }
        
    }//GEN-LAST:event_SendBTNActionPerformed

    public static <T>List<T> convertArrayToList(T array[])
    {
  
        // Create an empty List
        List<T> list = new ArrayList<>();
  
        // Iterate through the array
        list.addAll(Arrays.asList(array)); // Add each element into the list
  
        // Return the converted List
        return list;
    }
    
    
    private void ReadConfig()
    {
        BufferedReader br = null;
        try {
            File file = new File("Config.txt"); // java.io.File
            FileReader fr = new FileReader(file); // java.io.FileReader
            br = new BufferedReader(fr); // java.io.BufferedReader
            String line;
            while ((line = br.readLine()) != null) 
            {
              // process the line

		if (line.startsWith("SmsUN")) 
                { // check for a value (string starting with "")
                    
                    SmsUsername = line.substring(5).trim(); // show it in the label in the userinterface
                    System.out.println("Username"+SmsUsername);
		}
              
                if (line.startsWith("SmsPW")) 
                { // check for a value (string starting with "")
                    
                    SmsPassword = line.substring(5).trim(); // show it in the label in the userinterface
                    System.out.println("Password"+SmsPassword );
		}
            }
          }
          catch(IOException e) { e.printStackTrace();}
          finally
          {
              try { if (br != null) {
                  br.close();
              } }
              catch(IOException e) { e.printStackTrace(); }
          }
        
    }
    
    @SuppressWarnings("empty-statement")
    private void SendNotification(String[] ContactsArray,String Text)
    {
        String TextMsg = Text;
            try {
                //ContactsArray = new String[]{"\"+94766674810\"","\"+94775142377\""};
                
                
                List<String> list = convertArrayToList(ContactsArray);
                
                // This URL is used for sending messages
                String myURI = "https://api.bulksms.com/v1/messages";
                
                ReadConfig();
                
                // change these values to match your own account
                String myUsername = SmsUsername;
                String myPassword = SmsPassword;
                
                // the details of the message we want to send
                //String myData = "{to: \"1111111\", encoding: \"UNICODE\", body: \"DobrÃ¡ prÃ¡ce! Jak se mÃ¡Å¡?\"}";
                
                // if your message does not contain unicode, the "encoding" is not required:
                //String myData = "{to: [\"+94766674810\",\"+94775142377\"], body: \"Hello Guys, This is Testing 1\"}";
                
                
                
                //testing list
                String myData = "{to: "+list+", body: "+TextMsg+"}";
                
                System.out.println(Arrays.toString(list.toArray()));
                System.out.println("Text message : "+TextMsg);
                
                // build the request based on the supplied settings
                URL url = new URL(myURI);
                HttpURLConnection request = (HttpURLConnection) url.openConnection();
                request.setDoOutput(true);
                
                // supply the credentials
                String authStr = myUsername + ":" + myPassword;
                String authEncoded = Base64.getEncoder().encodeToString(authStr.getBytes());
                request.setRequestProperty("Authorization", "Basic " + authEncoded);
                
                // we want to use HTTP POST
                request.setRequestMethod("POST");
                request.setRequestProperty( "Content-Type", "application/json");
                
                try ( // write the data to the request
                    OutputStreamWriter out = new OutputStreamWriter(request.getOutputStream())) {
                    out.write(myData);
                }
                
                // try ... catch to handle errors nicely
                try {
                    // make the call to the API
                    InputStream response = request.getInputStream();
                    try (BufferedReader in = new BufferedReader(new InputStreamReader(response))) {
                        String replyText;
                        while ((replyText = in.readLine()) != null) {
                            System.out.println(replyText);
                            JOptionPane.showMessageDialog(null, replyText);
                        }     }
                } catch (IOException ex) {
                    System.out.println("An error occurred:" + ex.getMessage());
                    JOptionPane.showMessageDialog(null,"An error occurred:" + ex.getMessage());
                    // print the detail that comes with the error
                    try (BufferedReader in = new BufferedReader(new InputStreamReader(request.getErrorStream()))) {
                        // print the detail that comes with the error
                        String replyText;
                        String Errormsg = null;

                        while ((replyText = in.readLine()) != null) {
                            System.out.println(replyText);
                            Errormsg += replyText;
                        }   JOptionPane.showMessageDialog(null, Errormsg);
                    }
                }
                request.disconnect();
            }     catch (MalformedURLException ex) {
            Logger.getLogger(SendAlert_Design.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(SendAlert_Design.class.getName()).log(Level.SEVERE, null, ex);
        }
  
    }
    
    private void AlertDistrictMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AlertDistrictMouseEntered
        if(!Focus)
        {
            ADistrictLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxRoll.png"));
        }
    }//GEN-LAST:event_AlertDistrictMouseEntered

    private void AlertDistrictMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AlertDistrictMouseExited
        if(!Focus)
        {
            ADistrictLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxNormal.png"));
        }
    }//GEN-LAST:event_AlertDistrictMouseExited

    private void AlertDistrictFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_AlertDistrictFocusGained
        Focus = true;
        ADistrictLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxFocus.png"));
    }//GEN-LAST:event_AlertDistrictFocusGained

    private void AlertDistrictFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_AlertDistrictFocusLost
        Focus = false;
        ADistrictLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxNormal.png"));
    }//GEN-LAST:event_AlertDistrictFocusLost

    private void AlertDivisionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_AlertDivisionFocusGained
        Focus = true;
        ADivisionLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxFocus.png"));
    }//GEN-LAST:event_AlertDivisionFocusGained

    private void AlertDivisionFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_AlertDivisionFocusLost
        Focus = false;
        ADivisionLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxNormal.png"));
    }//GEN-LAST:event_AlertDivisionFocusLost

    private void AlertDivisionMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AlertDivisionMouseEntered
        if(!Focus)
        {
            ADivisionLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxRoll.png"));
        }
    }//GEN-LAST:event_AlertDivisionMouseEntered

    private void AlertDivisionMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AlertDivisionMouseExited
        if(!Focus)
        {
            ADivisionLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxNormal.png"));
        }
    }//GEN-LAST:event_AlertDivisionMouseExited

    private void AlertGNDMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AlertGNDMouseEntered
        if(!Focus)
        {
            AGNDLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxRoll.png"));
        }
    }//GEN-LAST:event_AlertGNDMouseEntered

    private void AlertGNDMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AlertGNDMouseExited
        if(!Focus)
        {
            AGNDLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxNormal.png"));
        }
    }//GEN-LAST:event_AlertGNDMouseExited

    private void AlertGNDFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_AlertGNDFocusGained
        Focus = true;
        AGNDLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxFocus.png"));
    }//GEN-LAST:event_AlertGNDFocusGained

    private void AlertGNDFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_AlertGNDFocusLost
        Focus = false;
        AGNDLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxNormal.png"));
    }//GEN-LAST:event_AlertGNDFocusLost

    private void AgeCategoryMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AgeCategoryMouseEntered
        if(!Focus)
        {
            ACLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxRoll.png"));
        }
    }//GEN-LAST:event_AgeCategoryMouseEntered

    private void AgeCategoryMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AgeCategoryMouseExited
        if(!Focus)
        {
            ACLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxNormal.png"));
        }
    }//GEN-LAST:event_AgeCategoryMouseExited

    private void AlertTextAreaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_AlertTextAreaFocusGained
        Focus = true;
        TextAreaLBL.setIcon(new ImageIcon("src/UI_Images/SendAlert/SendTextBoxFocus.png"));
        if(AlertTextArea.getText().equals("Enter Text..."))
        {
            AlertTextArea.setText("");
        }
    }//GEN-LAST:event_AlertTextAreaFocusGained

    private void AlertTextAreaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_AlertTextAreaFocusLost
        Focus = false;
        TextAreaLBL.setIcon(new ImageIcon("src/UI_Images/SendAlert/SendTextBoxNormal.png"));
        if(AlertTextArea.getText().trim().equals("") || AlertTextArea.getText().equals("Enter Text..."))
        {
        AlertTextArea.setText("Enter Text...");
        }
    }//GEN-LAST:event_AlertTextAreaFocusLost

    private void TextAreaLBLMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TextAreaLBLMouseEntered
        if(!Focus)
        {
            TextAreaLBL.setIcon(new ImageIcon("src/UI_Images/SendAlert/SendTextBoxRoll.png"));
        }
    }//GEN-LAST:event_TextAreaLBLMouseEntered

    private void TextAreaLBLMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TextAreaLBLMouseExited
        if(!Focus)
        {
            TextAreaLBL.setIcon(new ImageIcon("src/UI_Images/SendAlert/SendTextBoxNormal.png"));
        }
    }//GEN-LAST:event_TextAreaLBLMouseExited

    private void AlertTextAreaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AlertTextAreaMouseEntered
        if(!Focus)
        {
            TextAreaLBL.setIcon(new ImageIcon("src/UI_Images/SendAlert/SendTextBoxRoll.png"));
        }
    }//GEN-LAST:event_AlertTextAreaMouseEntered

    private void AlertTextAreaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AlertTextAreaMouseExited
        if(!Focus)
        {
            TextAreaLBL.setIcon(new ImageIcon("src/UI_Images/SendAlert/SendTextBoxNormal.png"));
        }
    }//GEN-LAST:event_AlertTextAreaMouseExited

    private void KandyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_KandyMouseClicked
        AlertDistrict.setSelectedIndex(1);
    }//GEN-LAST:event_KandyMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ACLBL;
    private javax.swing.JLabel ADistrictLBL;
    private javax.swing.JLabel ADivisionLBL;
    private javax.swing.JLabel AGNDLBL;
    private javax.swing.JComboBox<String> AgeCategory;
    private javax.swing.JComboBox<String> AlertDistrict;
    private javax.swing.JComboBox<String> AlertDivision;
    private javax.swing.JComboBox<String> AlertGND;
    private javax.swing.JTextArea AlertTextArea;
    private javax.swing.JLabel Kandy;
    private javax.swing.JLabel LBLnames;
    private javax.swing.JLabel LKMap;
    private javax.swing.JLabel MainWigdetLBL4;
    private javax.swing.JPanel SendAlertPanel;
    private javax.swing.JButton SendBTN;
    private javax.swing.JLabel TextAreaLBL;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
