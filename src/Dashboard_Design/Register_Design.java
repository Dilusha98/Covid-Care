/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Dashboard_Design;


import Main.DBConnection;
import java.awt.Color;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.ImageIcon;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import java.sql.SQLException;
import javax.imageio.ImageIO;
import javax.swing.JLabel;




/**
 *
 * @author Darkheart
 */
public class Register_Design extends javax.swing.JPanel {

    public static Connection Conn = null;
    public Statement stmt = null;
    public PreparedStatement pst = null;
    public String sql = "";
    public ResultSet rs = null;
    private boolean Focus = false;
    private String excelFilePath = null;
    /**
     * Creates new form RegisterPanel
     */
    public Register_Design() {
        initComponents();
        Conn = DBConnection.getconn();
        DateChooser.setIcon(new ImageIcon("src/Icons/calendar.png"));
        MfdDateChooser.setIcon(new ImageIcon("src/Icons/calendar.png"));
        ExpDateChooser.setIcon(new ImageIcon("src/Icons/calendar.png"));
        TabbedPane.setBackground(new Color(0,0,0,0));
        ClearBTN.setVisible(false);
        IDphoto.setVisible(false);
        IDLBL.setVisible(false);
        VILBL.setVisible(false);
        
    }

    
    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        RegisterPanel = new javax.swing.JPanel();
        TabbedPane = new javax.swing.JTabbedPane();
        DoseStatus = new javax.swing.JPanel();
        ClearBTN = new javax.swing.JButton();
        Nic = new javax.swing.JTextField();
        Name = new javax.swing.JTextField();
        PlaceV = new javax.swing.JTextField();
        DateChooser = new com.toedter.calendar.JDateChooser();
        NameOfVaccine = new javax.swing.JComboBox<>();
        NicLBL = new javax.swing.JLabel();
        NovLBL = new javax.swing.JLabel();
        IDphoto = new javax.swing.JLabel();
        IDLBL = new javax.swing.JLabel();
        FirstDoseBTN = new javax.swing.JButton();
        SecondDoseBTN = new javax.swing.JButton();
        PovLBL = new javax.swing.JLabel();
        NameLBL = new javax.swing.JLabel();
        VILBL = new javax.swing.JLabel();
        NamesLBL = new javax.swing.JLabel();
        BG = new javax.swing.JLabel();
        People = new javax.swing.JPanel();
        P_ImportBTN = new javax.swing.JButton();
        P_InsertBTN = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        P_Nic = new javax.swing.JTextField();
        P_NicLBL = new javax.swing.JLabel();
        P_FName = new javax.swing.JTextField();
        P_FNameLBL = new javax.swing.JLabel();
        P_Age = new javax.swing.JTextField();
        P_AgeLBL = new javax.swing.JLabel();
        P_Number = new javax.swing.JTextField();
        P_NumberLBL = new javax.swing.JLabel();
        P_District = new javax.swing.JComboBox<>();
        P_DistrictLBL = new javax.swing.JLabel();
        P_Division = new javax.swing.JComboBox<>();
        P_DiviLBL = new javax.swing.JLabel();
        P_GNDivision = new javax.swing.JComboBox<>();
        P_GNDLBL = new javax.swing.JLabel();
        BGpeople = new javax.swing.JLabel();
        Vaccines = new javax.swing.JPanel();
        VaccInsert = new javax.swing.JButton();
        VaccImport = new javax.swing.JButton();
        VaccineName = new javax.swing.JComboBox<>();
        VaccineNameLBL = new javax.swing.JLabel();
        GID = new javax.swing.JTextField();
        GidLBL = new javax.swing.JLabel();
        VaccQuantitiy = new javax.swing.JTextField();
        VaccQuantityLBL = new javax.swing.JLabel();
        MfdDateChooser = new com.toedter.calendar.JDateChooser();
        ExpDateChooser = new com.toedter.calendar.JDateChooser();
        Cost = new javax.swing.JTextField();
        CostLBL = new javax.swing.JLabel();
        VBG = new javax.swing.JLabel();
        MainWigdetLBL3 = new javax.swing.JLabel();

        setOpaque(false);

        RegisterPanel.setOpaque(false);
        RegisterPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TabbedPane.setBackground(new java.awt.Color(255, 255, 255));
        TabbedPane.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        TabbedPane.setDoubleBuffered(true);

        DoseStatus.setBackground(new java.awt.Color(255, 255, 255));
        DoseStatus.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ClearBTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI_Images/IssueID/Icon material-clear.png"))); // NOI18N
        ClearBTN.setBorder(null);
        ClearBTN.setContentAreaFilled(false);
        ClearBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearBTNActionPerformed(evt);
            }
        });
        DoseStatus.add(ClearBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 28, 30, 30));

        Nic.setBorder(null);
        Nic.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                NicFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                NicFocusLost(evt);
            }
        });
        Nic.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                NicMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                NicMouseExited(evt);
            }
        });
        Nic.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                NicKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                NicKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                NicKeyTyped(evt);
            }
        });
        DoseStatus.add(Nic, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 30, 220, 20));

        Name.setBorder(null);
        Name.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                NameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                NameFocusLost(evt);
            }
        });
        Name.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                NameMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                NameMouseExited(evt);
            }
        });
        DoseStatus.add(Name, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 90, 220, 20));

        PlaceV.setBorder(null);
        PlaceV.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                PlaceVFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                PlaceVFocusLost(evt);
            }
        });
        PlaceV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                PlaceVMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                PlaceVMouseExited(evt);
            }
        });
        DoseStatus.add(PlaceV, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 276, 220, 20));

        DateChooser.setBackground(new java.awt.Color(255, 255, 255));
        DateChooser.setFocusCycleRoot(true);
        DateChooser.setFocusTraversalPolicyProvider(true);
        DateChooser.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        DateChooser.setIcon(null);
        DateChooser.setOpaque(false);
        DateChooser.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                DateChooserFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                DateChooserFocusLost(evt);
            }
        });
        DateChooser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                DateChooserMouseEntered(evt);
            }
        });
        DoseStatus.add(DateChooser, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 150, 260, 30));

        NameOfVaccine.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Pfizer-BioNTech", "Moderna", "Johnson & Johnsonâ€™s Janssen", "Gamaleya/Sputnik V", "Covishield (Oxford/AstraZeneca formulation)", "Sinopharm", "Sinovac CoronaVac" }));
        NameOfVaccine.setBorder(null);
        NameOfVaccine.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                NameOfVaccineFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                NameOfVaccineFocusLost(evt);
            }
        });
        NameOfVaccine.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                NameOfVaccineMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                NameOfVaccineMouseExited(evt);
            }
        });
        DoseStatus.add(NameOfVaccine, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 210, 220, 20));

        NicLBL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI_Images/Register_DosePanel/DTextBoxNormal.png"))); // NOI18N
        NicLBL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                NicLBLMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                NicLBLMouseExited(evt);
            }
        });
        DoseStatus.add(NicLBL, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 20, 280, 50));

        NovLBL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI_Images/Register_DosePanel/DTextBoxNormal.png"))); // NOI18N
        NovLBL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                NovLBLMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                NovLBLMouseExited(evt);
            }
        });
        DoseStatus.add(NovLBL, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 200, 280, 50));
        DoseStatus.add(IDphoto, new org.netbeans.lib.awtextra.AbsoluteConstraints(597, 46, 240, 120));

        IDLBL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI_Images/Register_DosePanel/IDNormal.png"))); // NOI18N
        IDLBL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                IDLBLMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                IDLBLMouseExited(evt);
            }
        });
        DoseStatus.add(IDLBL, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 30, -1, 160));

        FirstDoseBTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI_Images/Register_DosePanel/1st_DoseNormal.png"))); // NOI18N
        FirstDoseBTN.setBorder(null);
        FirstDoseBTN.setContentAreaFilled(false);
        FirstDoseBTN.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/UI_Images/Register_DosePanel/1st_DoseSelected.png"))); // NOI18N
        FirstDoseBTN.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/UI_Images/Register_DosePanel/1st_DoseUncheckedRoll.png"))); // NOI18N
        FirstDoseBTN.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/UI_Images/Register_DosePanel/1st_DoseSelected.png"))); // NOI18N
        FirstDoseBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FirstDoseBTNActionPerformed(evt);
            }
        });
        DoseStatus.add(FirstDoseBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(265, 320, 150, 60));

        SecondDoseBTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI_Images/Register_DosePanel/2st_DoseNormal.png"))); // NOI18N
        SecondDoseBTN.setBorder(null);
        SecondDoseBTN.setContentAreaFilled(false);
        SecondDoseBTN.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/UI_Images/Register_DosePanel/2nd_DoseSelected.png"))); // NOI18N
        SecondDoseBTN.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/UI_Images/Register_DosePanel/2nd_DoseUncheckedRoll.png"))); // NOI18N
        SecondDoseBTN.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/UI_Images/Register_DosePanel/2nd_DoseSelected.png"))); // NOI18N
        SecondDoseBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SecondDoseBTNActionPerformed(evt);
            }
        });
        DoseStatus.add(SecondDoseBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(403, 320, 150, 60));

        PovLBL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI_Images/Register_DosePanel/DTextBoxNormal.png"))); // NOI18N
        PovLBL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                PovLBLMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                PovLBLMouseExited(evt);
            }
        });
        DoseStatus.add(PovLBL, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 265, 280, 50));

        NameLBL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI_Images/Register_DosePanel/DTextBoxNormal.png"))); // NOI18N
        NameLBL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                NameLBLMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                NameLBLMouseExited(evt);
            }
        });
        DoseStatus.add(NameLBL, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 80, 280, 50));

        VILBL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI_Images/Register_DosePanel/Vaccination ID.png"))); // NOI18N
        DoseStatus.add(VILBL, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 20, 140, 20));

        NamesLBL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI_Images/Register_DosePanel/NamesLBL.png"))); // NOI18N
        NamesLBL.setDoubleBuffered(true);
        DoseStatus.add(NamesLBL, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 850, 350));

        BG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI_Images/Register_DosePanel/Scroll Group 3.png"))); // NOI18N
        BG.setDoubleBuffered(true);
        DoseStatus.add(BG, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 10, 900, 440));

        TabbedPane.addTab("Dose Status ", new javax.swing.ImageIcon(getClass().getResource("/Icons/DoseIcon_1.png")), DoseStatus); // NOI18N

        People.setBackground(new java.awt.Color(255, 255, 255));
        People.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        P_ImportBTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI_Images/Register_PeoplePanel/ImportBTNNormal.png"))); // NOI18N
        P_ImportBTN.setBorder(null);
        P_ImportBTN.setContentAreaFilled(false);
        P_ImportBTN.setDoubleBuffered(true);
        P_ImportBTN.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/UI_Images/Register_PeoplePanel/ImportBTNSelect.png"))); // NOI18N
        P_ImportBTN.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/UI_Images/Register_PeoplePanel/ImportBTNRoll.png"))); // NOI18N
        P_ImportBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                P_ImportBTNActionPerformed(evt);
            }
        });
        People.add(P_ImportBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 110, 240, 90));

        P_InsertBTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI_Images/Register_PeoplePanel/InsertBTNNormal.png"))); // NOI18N
        P_InsertBTN.setBorder(null);
        P_InsertBTN.setContentAreaFilled(false);
        P_InsertBTN.setDoubleBuffered(true);
        P_InsertBTN.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/UI_Images/Register_PeoplePanel/InsertBTNSelect.png"))); // NOI18N
        P_InsertBTN.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/UI_Images/Register_PeoplePanel/InsertBTNRoll.png"))); // NOI18N
        P_InsertBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                P_InsertBTNActionPerformed(evt);
            }
        });
        People.add(P_InsertBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 375, 160, 50));

        jPanel1.setOpaque(false);
        jPanel1.setLayout(null);

        P_Nic.setBorder(null);
        P_Nic.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                P_NicFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                P_NicFocusLost(evt);
            }
        });
        P_Nic.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                P_NicMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                P_NicMouseExited(evt);
            }
        });
        jPanel1.add(P_Nic);
        P_Nic.setBounds(30, 10, 220, 20);

        P_NicLBL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI_Images/Register_PeoplePanel/TextBoxNormal.png"))); // NOI18N
        P_NicLBL.setDoubleBuffered(true);
        P_NicLBL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                P_NicLBLMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                P_NicLBLMouseExited(evt);
            }
        });
        jPanel1.add(P_NicLBL);
        P_NicLBL.setBounds(0, 0, 280, 47);

        P_FName.setBorder(null);
        P_FName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                P_FNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                P_FNameFocusLost(evt);
            }
        });
        P_FName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                P_FNameMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                P_FNameMouseExited(evt);
            }
        });
        jPanel1.add(P_FName);
        P_FName.setBounds(30, 60, 220, 20);

        P_FNameLBL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI_Images/Register_PeoplePanel/TextBoxNormal.png"))); // NOI18N
        P_FNameLBL.setDoubleBuffered(true);
        P_FNameLBL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                P_FNameLBLMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                P_FNameLBLMouseExited(evt);
            }
        });
        jPanel1.add(P_FNameLBL);
        P_FNameLBL.setBounds(0, 50, 280, 50);

        P_Age.setBorder(null);
        P_Age.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                P_AgeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                P_AgeFocusLost(evt);
            }
        });
        P_Age.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                P_AgeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                P_AgeMouseExited(evt);
            }
        });
        jPanel1.add(P_Age);
        P_Age.setBounds(30, 110, 220, 20);

        P_AgeLBL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI_Images/Register_PeoplePanel/TextBoxNormal.png"))); // NOI18N
        P_AgeLBL.setDoubleBuffered(true);
        P_AgeLBL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                P_AgeLBLMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                P_AgeLBLMouseExited(evt);
            }
        });
        jPanel1.add(P_AgeLBL);
        P_AgeLBL.setBounds(0, 100, 280, 50);

        P_Number.setBorder(null);
        P_Number.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                P_NumberFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                P_NumberFocusLost(evt);
            }
        });
        P_Number.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                P_NumberMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                P_NumberMouseExited(evt);
            }
        });
        jPanel1.add(P_Number);
        P_Number.setBounds(30, 160, 220, 20);

        P_NumberLBL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI_Images/Register_PeoplePanel/TextBoxNormal.png"))); // NOI18N
        P_NumberLBL.setDoubleBuffered(true);
        P_NumberLBL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                P_NumberLBLMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                P_NumberLBLMouseExited(evt);
            }
        });
        jPanel1.add(P_NumberLBL);
        P_NumberLBL.setBounds(0, 150, 280, 50);

        P_District.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Item 2", "Item 3", "Item 4" }));
        P_District.setBorder(null);
        P_District.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                P_DistrictFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                P_DistrictFocusLost(evt);
            }
        });
        P_District.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                P_DistrictMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                P_DistrictMouseExited(evt);
            }
        });
        jPanel1.add(P_District);
        P_District.setBounds(30, 215, 220, 20);

        P_DistrictLBL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI_Images/Register_PeoplePanel/TextBoxNormal.png"))); // NOI18N
        P_DistrictLBL.setDoubleBuffered(true);
        P_DistrictLBL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                P_DistrictLBLMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                P_DistrictLBLMouseExited(evt);
            }
        });
        jPanel1.add(P_DistrictLBL);
        P_DistrictLBL.setBounds(0, 205, 280, 50);

        P_Division.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Item 2", "Item 3", "Item 4" }));
        P_Division.setBorder(null);
        P_Division.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                P_DivisionFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                P_DivisionFocusLost(evt);
            }
        });
        P_Division.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                P_DivisionMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                P_DivisionMouseExited(evt);
            }
        });
        jPanel1.add(P_Division);
        P_Division.setBounds(30, 270, 220, 20);

        P_DiviLBL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI_Images/Register_PeoplePanel/TextBoxNormal.png"))); // NOI18N
        P_DiviLBL.setDoubleBuffered(true);
        P_DiviLBL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                P_DiviLBLMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                P_DiviLBLMouseExited(evt);
            }
        });
        jPanel1.add(P_DiviLBL);
        P_DiviLBL.setBounds(0, 260, 280, 50);

        P_GNDivision.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Item 2", "Item 3", "Item 4" }));
        P_GNDivision.setBorder(null);
        P_GNDivision.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                P_GNDivisionFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                P_GNDivisionFocusLost(evt);
            }
        });
        P_GNDivision.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                P_GNDivisionMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                P_GNDivisionMouseExited(evt);
            }
        });
        jPanel1.add(P_GNDivision);
        P_GNDivision.setBounds(30, 330, 220, 20);

        P_GNDLBL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI_Images/Register_PeoplePanel/TextBoxNormal.png"))); // NOI18N
        P_GNDLBL.setDoubleBuffered(true);
        P_GNDLBL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                P_GNDLBLMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                P_GNDLBLMouseExited(evt);
            }
        });
        jPanel1.add(P_GNDLBL);
        P_GNDLBL.setBounds(0, 320, 280, 50);

        People.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 10, 280, 370));

        BGpeople.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI_Images/Register_PeoplePanel/BgPepoleN.png"))); // NOI18N
        BGpeople.setDoubleBuffered(true);
        People.add(BGpeople, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 8, 860, 420));

        TabbedPane.addTab("People", new javax.swing.ImageIcon(getClass().getResource("/Icons/PeopleIcon_1.png")), People); // NOI18N

        Vaccines.setBackground(new java.awt.Color(255, 255, 255));
        Vaccines.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        VaccInsert.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI_Images/Register_PeoplePanel/InsertBTNNormal.png"))); // NOI18N
        VaccInsert.setBorder(null);
        VaccInsert.setContentAreaFilled(false);
        VaccInsert.setDoubleBuffered(true);
        VaccInsert.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/UI_Images/Register_PeoplePanel/InsertBTNSelect.png"))); // NOI18N
        VaccInsert.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/UI_Images/Register_PeoplePanel/InsertBTNRoll.png"))); // NOI18N
        VaccInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VaccInsertActionPerformed(evt);
            }
        });
        Vaccines.add(VaccInsert, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 360, 180, 50));

        VaccImport.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI_Images/Register_PeoplePanel/ImportBTNNormal.png"))); // NOI18N
        VaccImport.setBorder(null);
        VaccImport.setContentAreaFilled(false);
        VaccImport.setDoubleBuffered(true);
        VaccImport.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/UI_Images/Register_PeoplePanel/ImportBTNSelect.png"))); // NOI18N
        VaccImport.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/UI_Images/Register_PeoplePanel/ImportBTNRoll.png"))); // NOI18N
        VaccImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VaccImportActionPerformed(evt);
            }
        });
        Vaccines.add(VaccImport, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 0, 240, 120));

        VaccineName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Pfizer-BioNTech", "Moderna", "Johnson & Johnsonâ€™s Janssen", "Gamaleya/Sputnik V", "Covishield (Oxford/AstraZeneca formulation)", "Sinopharm", "Sinovac CoronaVac" }));
        VaccineName.setBorder(null);
        VaccineName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                VaccineNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                VaccineNameFocusLost(evt);
            }
        });
        VaccineName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                VaccineNameMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                VaccineNameMouseExited(evt);
            }
        });
        Vaccines.add(VaccineName, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 72, 220, 20));

        VaccineNameLBL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI_Images/Register_DosePanel/DTextBoxNormal.png"))); // NOI18N
        VaccineNameLBL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                VaccineNameLBLMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                VaccineNameLBLMouseExited(evt);
            }
        });
        Vaccines.add(VaccineNameLBL, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 60, 280, 50));

        GID.setBorder(null);
        GID.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                GIDFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                GIDFocusLost(evt);
            }
        });
        GID.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                GIDMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                GIDMouseExited(evt);
            }
        });
        Vaccines.add(GID, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 10, 220, 20));

        GidLBL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI_Images/Register_DosePanel/DTextBoxNormal.png"))); // NOI18N
        GidLBL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                GidLBLMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                GidLBLMouseExited(evt);
            }
        });
        Vaccines.add(GidLBL, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 0, 280, 50));

        VaccQuantitiy.setBorder(null);
        VaccQuantitiy.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                VaccQuantitiyFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                VaccQuantitiyFocusLost(evt);
            }
        });
        VaccQuantitiy.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                VaccQuantitiyMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                VaccQuantitiyMouseExited(evt);
            }
        });
        Vaccines.add(VaccQuantitiy, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 140, 220, 20));

        VaccQuantityLBL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI_Images/Register_DosePanel/DTextBoxNormal.png"))); // NOI18N
        VaccQuantityLBL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                VaccQuantityLBLMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                VaccQuantityLBLMouseExited(evt);
            }
        });
        Vaccines.add(VaccQuantityLBL, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 130, 280, 50));

        MfdDateChooser.setBackground(new java.awt.Color(255, 255, 255));
        MfdDateChooser.setFocusCycleRoot(true);
        MfdDateChooser.setFocusTraversalPolicyProvider(true);
        MfdDateChooser.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        MfdDateChooser.setIcon(null);
        MfdDateChooser.setOpaque(false);
        MfdDateChooser.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                MfdDateChooserFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                MfdDateChooserFocusLost(evt);
            }
        });
        MfdDateChooser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                MfdDateChooserMouseEntered(evt);
            }
        });
        Vaccines.add(MfdDateChooser, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 200, 260, 30));

        ExpDateChooser.setBackground(new java.awt.Color(255, 255, 255));
        ExpDateChooser.setFocusCycleRoot(true);
        ExpDateChooser.setFocusTraversalPolicyProvider(true);
        ExpDateChooser.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        ExpDateChooser.setIcon(null);
        ExpDateChooser.setOpaque(false);
        ExpDateChooser.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ExpDateChooserFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                ExpDateChooserFocusLost(evt);
            }
        });
        ExpDateChooser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ExpDateChooserMouseEntered(evt);
            }
        });
        Vaccines.add(ExpDateChooser, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 260, 260, 30));

        Cost.setBorder(null);
        Cost.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                CostFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                CostFocusLost(evt);
            }
        });
        Cost.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                CostMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                CostMouseExited(evt);
            }
        });
        Vaccines.add(Cost, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 320, 220, 20));

        CostLBL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI_Images/Register_DosePanel/DTextBoxNormal.png"))); // NOI18N
        CostLBL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                CostLBLMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                CostLBLMouseExited(evt);
            }
        });
        Vaccines.add(CostLBL, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 310, 280, 50));

        VBG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI_Images/Register_VaccinesPanel/VaccineTabBG.png"))); // NOI18N
        VBG.setDoubleBuffered(true);
        Vaccines.add(VBG, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -10, 970, 450));

        TabbedPane.addTab("Vaccines", new javax.swing.ImageIcon(getClass().getResource("/Icons/VaccineIcon_1.png")), Vaccines); // NOI18N

        RegisterPanel.add(TabbedPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 900, 470));
        TabbedPane.getAccessibleContext().setAccessibleName("tabs");

        MainWigdetLBL3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI_Images/DashNormalWidget/DashMainWidget.png"))); // NOI18N
        MainWigdetLBL3.setDoubleBuffered(true);
        MainWigdetLBL3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                MainWigdetLBL3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                MainWigdetLBL3MouseExited(evt);
            }
        });
        RegisterPanel.add(MainWigdetLBL3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 5, 930, 490));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 950, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(RegisterPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 510, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(RegisterPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void MainWigdetLBL3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MainWigdetLBL3MouseEntered
        MainWigdetLBL3.setIcon(new ImageIcon("src/UI_Images/DashRolloverWidget/DashMainWigdetRollover.png"));
    }//GEN-LAST:event_MainWigdetLBL3MouseEntered

    private void MainWigdetLBL3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MainWigdetLBL3MouseExited
        MainWigdetLBL3.setIcon(new ImageIcon("src/UI_Images/DashNormalWidget/DashMainWidget.png"));
    }//GEN-LAST:event_MainWigdetLBL3MouseExited

    private void NicFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_NicFocusGained
        Focus = true;
        NicLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxFocus.png"));
    }//GEN-LAST:event_NicFocusGained

    private void NicFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_NicFocusLost
        Focus = false;
        NicLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxNormal.png"));
    }//GEN-LAST:event_NicFocusLost

    private void NameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_NameFocusGained
        Focus = true;
        NameLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxFocus.png"));
    }//GEN-LAST:event_NameFocusGained

    private void NameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_NameFocusLost
        Focus = false;
        NameLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxNormal.png"));
    }//GEN-LAST:event_NameFocusLost

    private void NameOfVaccineFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_NameOfVaccineFocusGained
        Focus = true;
        NovLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxFocus.png"));
    }//GEN-LAST:event_NameOfVaccineFocusGained

    private void NameOfVaccineFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_NameOfVaccineFocusLost
        Focus = false;
        NovLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxNormal.png"));
    }//GEN-LAST:event_NameOfVaccineFocusLost

    private void PlaceVFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PlaceVFocusGained
        Focus = true;
        PovLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxFocus.png"));
    }//GEN-LAST:event_PlaceVFocusGained

    private void PlaceVFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PlaceVFocusLost
        Focus = false;
        PovLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxNormal.png"));
    }//GEN-LAST:event_PlaceVFocusLost

    private void IDLBLMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_IDLBLMouseEntered
        IDLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/IDRoll.png"));
    }//GEN-LAST:event_IDLBLMouseEntered

    private void IDLBLMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_IDLBLMouseExited
        IDLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/IDNormal.png"));
    }//GEN-LAST:event_IDLBLMouseExited

    private void DateChooserFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_DateChooserFocusGained

    }//GEN-LAST:event_DateChooserFocusGained

    private void DateChooserFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_DateChooserFocusLost
        
    }//GEN-LAST:event_DateChooserFocusLost

    private void DateChooserMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DateChooserMouseEntered
        
    }//GEN-LAST:event_DateChooserMouseEntered

    private void P_NicFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_P_NicFocusGained
        Focus = true;
        P_NicLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxFocus.png"));
    }//GEN-LAST:event_P_NicFocusGained

    private void P_NicFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_P_NicFocusLost
        Focus = false;
        P_NicLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxNormal.png"));
    }//GEN-LAST:event_P_NicFocusLost

    private void P_FNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_P_FNameFocusGained
        Focus = true;
        P_FNameLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxFocus.png"));
    }//GEN-LAST:event_P_FNameFocusGained

    private void P_FNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_P_FNameFocusLost
        Focus = false;
        P_FNameLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxNormal.png"));
    }//GEN-LAST:event_P_FNameFocusLost

    private void P_AgeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_P_AgeFocusGained
        Focus = true;
        P_AgeLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxFocus.png"));
    }//GEN-LAST:event_P_AgeFocusGained

    private void P_AgeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_P_AgeFocusLost
        Focus = false;
        P_AgeLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxNormal.png"));
    }//GEN-LAST:event_P_AgeFocusLost

    private void P_DistrictFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_P_DistrictFocusGained
        Focus = true;
        P_DistrictLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxFocus.png"));
    }//GEN-LAST:event_P_DistrictFocusGained

    private void P_DistrictFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_P_DistrictFocusLost
        Focus = false;
        P_DistrictLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxNormal.png"));
    }//GEN-LAST:event_P_DistrictFocusLost

    private void P_DivisionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_P_DivisionFocusGained
        Focus = true;
        P_DiviLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxFocus.png"));
    }//GEN-LAST:event_P_DivisionFocusGained

    private void P_DivisionFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_P_DivisionFocusLost
        Focus = false;
        P_DiviLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxNormal.png"));
    }//GEN-LAST:event_P_DivisionFocusLost

    private void P_GNDivisionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_P_GNDivisionFocusGained
        Focus = true;
        P_GNDLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxFocus.png"));
    }//GEN-LAST:event_P_GNDivisionFocusGained

    private void P_GNDivisionFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_P_GNDivisionFocusLost
        Focus = false;
        P_GNDLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxNormal.png"));
    }//GEN-LAST:event_P_GNDivisionFocusLost
    
    private void P_NicMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_P_NicMouseEntered
        if(!Focus)
        {
        P_NicLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxRoll.png"));
        }
    }//GEN-LAST:event_P_NicMouseEntered

    private void P_NicMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_P_NicMouseExited
        if(!Focus)
        {
        P_NicLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxNormal.png"));
        }
    }//GEN-LAST:event_P_NicMouseExited

    private void P_FNameMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_P_FNameMouseEntered
        if(!Focus)
        {
        P_FNameLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxRoll.png"));
        }
    }//GEN-LAST:event_P_FNameMouseEntered

    private void P_FNameMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_P_FNameMouseExited
        if(!Focus)
        {
        P_FNameLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxNormal.png"));
        }
    }//GEN-LAST:event_P_FNameMouseExited

    private void P_NicLBLMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_P_NicLBLMouseEntered
        if(!Focus)
        {
        P_NicLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxRoll.png"));
        }
    }//GEN-LAST:event_P_NicLBLMouseEntered

    private void P_NicLBLMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_P_NicLBLMouseExited
        if(!Focus)
        {
        P_NicLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxNormal.png"));
        }
    }//GEN-LAST:event_P_NicLBLMouseExited

    private void P_FNameLBLMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_P_FNameLBLMouseEntered
        if(!Focus)
        {
        P_FNameLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxRoll.png"));
        }
    }//GEN-LAST:event_P_FNameLBLMouseEntered

    private void P_FNameLBLMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_P_FNameLBLMouseExited
        if(!Focus)
        {
        P_FNameLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxNormal.png"));
        }
    }//GEN-LAST:event_P_FNameLBLMouseExited

    private void P_AgeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_P_AgeMouseEntered
        if(!Focus)
        {
        P_AgeLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxRoll.png"));
        }
    }//GEN-LAST:event_P_AgeMouseEntered

    private void P_AgeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_P_AgeMouseExited
        if(!Focus)
        {
        P_AgeLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxNormal.png"));
        }
    }//GEN-LAST:event_P_AgeMouseExited

    private void P_AgeLBLMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_P_AgeLBLMouseEntered
        if(!Focus)
        {
        P_AgeLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxRoll.png"));
        }
    }//GEN-LAST:event_P_AgeLBLMouseEntered

    private void P_AgeLBLMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_P_AgeLBLMouseExited
        if(!Focus)
        {
        P_AgeLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxNormal.png"));
        }
    }//GEN-LAST:event_P_AgeLBLMouseExited

    private void P_DistrictMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_P_DistrictMouseEntered
        if(!Focus)
        {
        P_DistrictLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxRoll.png"));
        }
    }//GEN-LAST:event_P_DistrictMouseEntered

    private void P_DistrictMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_P_DistrictMouseExited
        if(!Focus)
        {
        P_DistrictLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxNormal.png"));
        }
    }//GEN-LAST:event_P_DistrictMouseExited

    private void P_DistrictLBLMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_P_DistrictLBLMouseEntered
        if(!Focus)
        {
        P_DistrictLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxRoll.png"));
        }
    }//GEN-LAST:event_P_DistrictLBLMouseEntered

    private void P_DistrictLBLMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_P_DistrictLBLMouseExited
        if(!Focus)
        {
        P_DistrictLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxNormal.png"));
        }
    }//GEN-LAST:event_P_DistrictLBLMouseExited

    private void P_DivisionMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_P_DivisionMouseEntered
        if(!Focus)
        {
        P_DiviLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxRoll.png"));
        }
    }//GEN-LAST:event_P_DivisionMouseEntered

    private void P_DivisionMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_P_DivisionMouseExited
        if(!Focus)
        {
        P_DiviLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxNormal.png"));
        }
    }//GEN-LAST:event_P_DivisionMouseExited

    private void P_DiviLBLMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_P_DiviLBLMouseEntered
        if(!Focus)
        {
        P_DiviLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxRoll.png"));
        }
    }//GEN-LAST:event_P_DiviLBLMouseEntered

    private void P_DiviLBLMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_P_DiviLBLMouseExited
        if(!Focus)
        {
        P_DiviLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxNormal.png"));
        }
    }//GEN-LAST:event_P_DiviLBLMouseExited

    private void P_GNDivisionMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_P_GNDivisionMouseEntered
        if(!Focus)
        {
        P_GNDLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxRoll.png"));
        }
    }//GEN-LAST:event_P_GNDivisionMouseEntered

    private void P_GNDivisionMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_P_GNDivisionMouseExited
        if(!Focus)
        {
        P_GNDLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxNormal.png"));
        }
    }//GEN-LAST:event_P_GNDivisionMouseExited

    private void P_GNDLBLMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_P_GNDLBLMouseEntered
        if(!Focus)
        {
        P_GNDLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxRoll.png"));
        }
    }//GEN-LAST:event_P_GNDLBLMouseEntered

    private void P_GNDLBLMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_P_GNDLBLMouseExited
        if(!Focus)
        {
        P_GNDLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxNormal.png"));
        }
    }//GEN-LAST:event_P_GNDLBLMouseExited

    private void NicMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NicMouseEntered
        if(!Focus)
        {
        NicLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxRoll.png"));
        }
    }//GEN-LAST:event_NicMouseEntered

    private void NicMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NicMouseExited
        if(!Focus)
        {
        NicLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxNormal.png"));
        }
    }//GEN-LAST:event_NicMouseExited

    private void NicLBLMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NicLBLMouseEntered
        if(!Focus)
        {
        NicLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxRoll.png"));
        }
    }//GEN-LAST:event_NicLBLMouseEntered

    private void NicLBLMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NicLBLMouseExited
        if(!Focus)
        {
        NicLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxNormal.png"));
        }
    }//GEN-LAST:event_NicLBLMouseExited

    private void NameMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NameMouseEntered
        if(!Focus)
        {
        NameLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxRoll.png"));
        }
    }//GEN-LAST:event_NameMouseEntered

    private void NameMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NameMouseExited
        if(!Focus)
        {
        NameLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxNormal.png"));
        }
    }//GEN-LAST:event_NameMouseExited

    private void NameOfVaccineMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NameOfVaccineMouseEntered
        if(!Focus)
        {
        NovLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxRoll.png"));
        }
    }//GEN-LAST:event_NameOfVaccineMouseEntered

    private void NameOfVaccineMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NameOfVaccineMouseExited
        if(!Focus)
        {
        NovLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxNormal.png"));
        }
    }//GEN-LAST:event_NameOfVaccineMouseExited

    private void NovLBLMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NovLBLMouseEntered
        if(!Focus)
        {
        NovLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxRoll.png"));
        }
    }//GEN-LAST:event_NovLBLMouseEntered

    private void NovLBLMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NovLBLMouseExited
        if(!Focus)
        {
        NovLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxNormal.png"));
        }
    }//GEN-LAST:event_NovLBLMouseExited

    private void PlaceVMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PlaceVMouseEntered
        if(!Focus)
        {
        PovLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxRoll.png"));
        }
    }//GEN-LAST:event_PlaceVMouseEntered

    private void PlaceVMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PlaceVMouseExited
        if(!Focus)
        {
        PovLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxNormal.png"));
        }
    }//GEN-LAST:event_PlaceVMouseExited

    private void PovLBLMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PovLBLMouseEntered
        if(!Focus)
        {
        PovLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxRoll.png"));
        }
    }//GEN-LAST:event_PovLBLMouseEntered

    private void PovLBLMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PovLBLMouseExited
        if(!Focus)
        {
        PovLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxNormal.png"));
        }
    }//GEN-LAST:event_PovLBLMouseExited

    private void NameLBLMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NameLBLMouseEntered
        if(!Focus)
        {
        NameLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxRoll.png"));
        }
    }//GEN-LAST:event_NameLBLMouseEntered

    private void NameLBLMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NameLBLMouseExited
        if(!Focus)
        {
        NameLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxNormal.png"));
        }
    }//GEN-LAST:event_NameLBLMouseExited

    private void P_ImportBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_P_ImportBTNActionPerformed
        
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Excel File", ".xlsx","xlsx");
	fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);

        fileChooser.addChoosableFileFilter(filter);
        fileChooser.setFileFilter(filter);
        int result = fileChooser.showSaveDialog(null);
        if(result == JFileChooser.APPROVE_OPTION){
            File selectedFile = fileChooser.getSelectedFile();
            excelFilePath = selectedFile.getAbsolutePath();

        }
        else if(result == JFileChooser.CANCEL_OPTION){
            System.out.println("No Data");
        }
        
        
        
 
        int batchSize = 20;
 
        try {
            long start = System.currentTimeMillis();
             
            FileInputStream inputStream = new FileInputStream(excelFilePath);
 
            try (Workbook workbook = new XSSFWorkbook(inputStream)) {
                Sheet firstSheet = workbook.getSheetAt(0);
                Iterator<Row> rowIterator = firstSheet.iterator();
                
                
                Conn.setAutoCommit(false);
                
                sql = "INSERT INTO People (Nic, FullName, Age, Number, District, Division, GNDivision) VALUES (?, ?, ?, ?, ?, ?, ?)";
                pst = Conn.prepareStatement(sql);
                
                int count = 0;
                
                rowIterator.next(); // skip the header row
                
                while (rowIterator.hasNext()) {
                    Row nextRow = rowIterator.next();
                    Iterator<Cell> cellIterator = nextRow.cellIterator();
                    
                    while (cellIterator.hasNext()) {
                        Cell nextCell = cellIterator.next();
                        
                        int columnIndex = nextCell.getColumnIndex();
                        
                        switch (columnIndex) {
                            case 0 -> {
                                String nic = nextCell.getStringCellValue();
                                pst.setString(1, nic);
                            }
                            case 1 -> {
                                //java.util.Date enrollDate = nextCell.getDateCellValue();
                                //pst.setTimestamp(2, new Timestamp(enrollDate.getTime()));
                                String name = nextCell.getStringCellValue();
                                pst.setString(2, name);
                            }
                            case 2 -> {
                                int age = (int) nextCell.getNumericCellValue();
                                pst.setInt(3, age);
                            }
                                
                            case 3 -> {
                                int number = (int) nextCell.getNumericCellValue();
                                pst.setInt(4, number);
                            }
                            case 4 -> {
                                String District = nextCell.getStringCellValue();
                                pst.setString(5, District);
                            }
                            case 5 -> {
                                String Division = nextCell.getStringCellValue();
                                pst.setString(6, Division );
                            }
                            case 6 -> {
                                String GndDivision = nextCell.getStringCellValue();
                                pst.setString(7, GndDivision);
                            }
                        }
                        
                    }
 
                    pst.addBatch();
                    
                    if (count % batchSize == 0) {
                        pst.executeBatch();
                    }
                    
                }
            }
             
            // execute the remaining queries
            pst.executeBatch();
  
            Conn.commit();
            //Conn.close();
             
            long end = System.currentTimeMillis();
            System.out.printf("Import done in %d ms\n", (end - start));
            JOptionPane.showMessageDialog(null, "Import Successful!");
             
        } catch (IOException ex1) {
            System.out.println("Error reading file");
            ex1.printStackTrace();
        } catch (SQLException ex2) {
            System.out.println("Database error");
            ex2.printStackTrace();
        }
    }//GEN-LAST:event_P_ImportBTNActionPerformed

    private void P_NumberFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_P_NumberFocusGained
        Focus = true;
        P_NumberLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxFocus.png"));
    }//GEN-LAST:event_P_NumberFocusGained

    private void P_NumberFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_P_NumberFocusLost
        Focus = false;
        P_NumberLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxNormal.png"));
    }//GEN-LAST:event_P_NumberFocusLost

    private void P_NumberMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_P_NumberMouseEntered
        if(!Focus)
        {
        P_NumberLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxRoll.png"));
        }
    }//GEN-LAST:event_P_NumberMouseEntered

    private void P_NumberMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_P_NumberMouseExited
        if(!Focus)
        {
        P_NumberLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxNormal.png"));
        }
    }//GEN-LAST:event_P_NumberMouseExited

    private void P_NumberLBLMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_P_NumberLBLMouseEntered
        if(!Focus)
        {
        P_NumberLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxRoll.png"));
        }
    }//GEN-LAST:event_P_NumberLBLMouseEntered

    private void P_NumberLBLMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_P_NumberLBLMouseExited
        if(!Focus)
        {
        P_NumberLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxNormal.png"));
        }
    }//GEN-LAST:event_P_NumberLBLMouseExited

    private void P_InsertBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_P_InsertBTNActionPerformed
         
        
        if(P_Nic.getText().isBlank())
        {
            JOptionPane.showMessageDialog(null, "Nic is Empty");
        }

        else if(checkPeople(P_Nic.getText()))
        {
            JOptionPane.showMessageDialog(null, "This Person is already registered for get Vaccines");
        }
        
        else if(P_FName.getText().isBlank())
        {
            JOptionPane.showMessageDialog(null, "Full Name is Empty");
        }
        else if(P_Age.getText().isBlank())
        {
            JOptionPane.showMessageDialog(null, "Age is Empty");
        }
        else if(P_Number.getText().isBlank())
        {
            JOptionPane.showMessageDialog(null, "Number is Empty");
        }
        else if(P_District.getSelectedIndex() == 0)
        {
            JOptionPane.showMessageDialog(null, "Select a District");
        }
        
        else if(P_Division.getSelectedIndex() == 0)
        {
            JOptionPane.showMessageDialog(null, "Select a Division");
        }
        
        else if(P_GNDivision.getSelectedIndex() == 0)
        {
            JOptionPane.showMessageDialog(null, "Select a G.N Division");
        }
        
        else
        {
        try {
            sql = "insert into People values(?,?,?,?,?,?,?)";
            pst = Conn.prepareStatement(sql);
                        
            pst.setString(1, P_Nic.getText());
            pst.setString(2, P_FName.getText());
            pst.setInt(3, Integer.valueOf(P_Age.getText()));
            pst.setInt(4, Integer.valueOf(P_Number.getText()));
            pst.setString(5, P_District.getSelectedItem().toString());
            pst.setString(6, P_Division.getSelectedItem().toString());
            pst.setString(7,P_GNDivision.getSelectedItem().toString());
            
            JOptionPane.showMessageDialog(null, "Data Input Successful!");
            pst.executeUpdate();
        } catch (SQLException ex) {
            Logger.getLogger(Register_Design.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, ex.toString());
        }
        }
  
    }//GEN-LAST:event_P_InsertBTNActionPerformed
    
    private final String DoseTaken = "Taken";
    private final String DoseNotTaken = "Not Taken";
    
    private boolean checkNic(String ChNic)    
    {

        boolean checknic = false;
        String query = "SELECT * FROM DoseStatus WHERE Nic =?";
        
        try {
            pst = Conn.prepareStatement(query);
            pst.setString(1, ChNic);
            
            rs = pst.executeQuery();
            
            if(rs.next())
            {
                checknic = true;
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.toString());
        }
         return checknic;
    }
    
     private void checkDose(String ChNic)    
    {

        String checknic = "";
        String query1 = "SELECT * FROM DoseStatus WHERE Nic =?";
        
        try {
            pst = Conn.prepareStatement(query1);
            pst.setString(1, ChNic);
            
            ResultSet rs6 = null;
            
            rs6 = pst.executeQuery();
            
            if(rs6.next())
            {
                D01 = rs6.getString("FirstDoseStatus");
                D02 = rs6.getString("SecondDoseStatus");
                
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.toString());
        }
         
    }
    
    public boolean checkPeople(String ChNic)    
    {

        boolean checknic = false;
        String query = "SELECT * FROM People WHERE Nic =?";
        
        try {
            pst = Conn.prepareStatement(query);
            pst.setString(1, ChNic);
            ResultSet rs7;
            rs7 = pst.executeQuery();
            
            if(rs7.next())
            {
                checknic = true;
                
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.toString());
        }
         return checknic;
    }
        
    public void FillName(String Nic)    
    {

        
        String query2 = "SELECT * FROM People WHERE Nic = ?";
        
        try 
        {
            pst = Conn.prepareStatement(query2);
            pst.setString(1, Nic);
            ResultSet rs8;
            rs8 = pst.executeQuery();
            
            if(rs8.next())
            { 
                Name.setText(rs8.getString("FullName"));
            }
        }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.toString());
        }
         
    }
    
     private String D01 = null;
     private String D02 = null;
    public void FillDoseData(String nic)
    {
        
        
        String query = "SELECT * FROM DoseStatus WHERE Nic =?";

        try {
            pst = Conn.prepareStatement(query);
            pst.setString(1, nic);
            
            rs = pst.executeQuery();
            
            if(rs.next())
            {
                D01 = rs.getString("FirstDoseStatus");
                D02 = rs.getString("SecondDoseStatus");
                
            if(D01.equals(DoseTaken) && D02.equals(DoseNotTaken))
            {
            FirstDoseBTN.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/1st_DoseNormalChecked.png"));
            FirstDoseBTN.setRolloverIcon(new ImageIcon("src/UI_Images/Register_DosePanel/1st_DoseCheckedRoll.png"));
            
                Name.setText(rs.getString("Name"));
                DateChooser.setDate(rs.getDate("FirstDoseDate"));
                
                for (int itemCount = 1; itemCount <=7;itemCount++)
                {
                if(rs.getString("Vname").equals(NameOfVaccine.getItemAt(itemCount)))
                {
                NameOfVaccine.setSelectedIndex(itemCount);
                break;
                }
                }
                
                PlaceV.setText(rs.getString("FirstDosePlace"));
            }
            
            else if(D01.equals(DoseTaken) && D02.equals(DoseTaken))
            {
            FirstDoseBTN.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/1st_DoseNormalChecked.png"));
            FirstDoseBTN.setRolloverIcon(new ImageIcon("src/UI_Images/Register_DosePanel/1st_DoseCheckedRoll.png"));
            SecondDoseBTN.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/2nd_DoseNormalChecked.png"));
            SecondDoseBTN.setRolloverIcon(new ImageIcon("src/UI_Images/Register_DosePanel/2nd_DoseCheckedRoll.png"));
            
                Name.setText(rs.getString("Name"));
                DateChooser.setDate(rs.getDate("SecondDoseDate"));
                
                for (int itemCount = 1; itemCount <=7;itemCount++)
                {
                if(rs.getString("Vname").equals(NameOfVaccine.getItemAt(itemCount)))
                {
                NameOfVaccine.setSelectedIndex(itemCount);
                break;
                }
                }
                
                PlaceV.setText(rs.getString("SecondDosePlace"));
            }
            

            }
            else
            {
                ClearDosePanel();
            }
            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.toString());
        }
    }
        
    private void ClearDosePanel()
    {
                Name.setText("");
                DateChooser.setCalendar(null);
                NameOfVaccine.setSelectedIndex(0);
                PlaceV.setText("");
                FirstDoseBTN.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/1st_DoseNormal.png"));
                FirstDoseBTN.setRolloverIcon(new ImageIcon("src/UI_Images/Register_DosePanel/1st_DoseUncheckedRoll.png"));
                SecondDoseBTN.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/2st_DoseNormal.png"));
                SecondDoseBTN.setRolloverIcon(new ImageIcon("src/UI_Images/Register_DosePanel/2nd_DoseUncheckedRoll.png"));
                IDphoto.setVisible(false);
                VILBL.setVisible(false);
    }
    
    private void FillID(String id)
    {
        
        String sql3 = "SELECT * FROM vaccinationid WHERE Nic =?";
        
        try {
            pst = Conn.prepareStatement(sql3);
            pst.setString(1, id);
            
            ResultSet rs3;
            rs3 = pst.executeQuery();
            
            if(rs3.next())
            {
                
                java.sql.Blob blob = rs3.getBlob("IDcard");
                InputStream in = blob.getBinaryStream();
                BufferedImage chIDimg = ImageIO.read(in);
                IDphoto.setIcon(ResizeIDch(chIDimg,IDphoto));
                System.out.println("ID loaded...");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.toString());
        } catch (IOException ex) {
            Logger.getLogger(IssueID_Design.class.getName()).log(Level.SEVERE, null, ex);
        }
         
    }
    
    private ImageIcon ResizeIDch(BufferedImage imgPath,JLabel lbl)
        {
        ImageIcon MyImage = new ImageIcon(imgPath);
        Image img = MyImage.getImage();
        Image newImage = img.getScaledInstance(lbl.getWidth(), lbl.getHeight(),Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(newImage);
        return image;
        }
        
    private void FirstDoseBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FirstDoseBTNActionPerformed
        
        if(Nic.getText().isBlank())
        {
            JOptionPane.showMessageDialog(null, "Nic is Empty");
        }
        else if(!checkPeople(Nic.getText()))
        {
            JOptionPane.showMessageDialog(null, "This Person is not Registered for take Vaccines yet");
        }
        
        else if(checkNic(Nic.getText()))
        {
            JOptionPane.showMessageDialog(null, "First Dose is already given to this person");
        }
        else if(Name.getText().isBlank())
        {
            JOptionPane.showMessageDialog(null, "Name is Empty");
        }
        else if(DateChooser.getDate() == null)
        {
            JOptionPane.showMessageDialog(null, "Date is Empty");
        }
        else if(NameOfVaccine.getSelectedIndex() == 0)
        {
            JOptionPane.showMessageDialog(null, "Select the Vaccine name");
        }
        else if(PlaceV.getText().isBlank())
        {
            JOptionPane.showMessageDialog(null, "Place of Vaccination is Empty");
        }
        
        else
        {
            
        
        try {
            sql = "insert into DoseStatus(Nic, Name, FirstDoseDate, VName, FirstDosePlace, FirstDoseStatus, SecondDoseStatus) values(?,?,?,?,?,?,?)";
            
            pst = Conn.prepareStatement(sql);        
            pst.setString(1, Nic.getText());
            pst.setString(2, Name.getText());
            java.util.Date date = DateChooser.getDate();
            java.sql.Date sqlDate = new java.sql.Date(date.getTime());
            pst.setDate(3, sqlDate);
            pst.setString(4,NameOfVaccine.getSelectedItem().toString());
            pst.setString(5, PlaceV.getText());
            pst.setString(6,DoseTaken);
            pst.setString(7,DoseNotTaken);
            
            FirstDoseBTN.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/1st_DoseNormalChecked.png"));
            FirstDoseBTN.setRolloverIcon(new ImageIcon("src/UI_Images/Register_DosePanel/1st_DoseCheckedRoll.png"));
            
            JOptionPane.showMessageDialog(null, "Dose Data Update Successful!");
            pst.executeUpdate();
        } catch (SQLException ex) {
            Logger.getLogger(Register_Design.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, ex.toString());
        }
        }
    }//GEN-LAST:event_FirstDoseBTNActionPerformed

    private void SecondDoseBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SecondDoseBTNActionPerformed
            
        checkDose(Nic.getText());
        
        if(Nic.getText().isBlank())
        {
            JOptionPane.showMessageDialog(null, "Nic is Empty");
        }
        
        else if(!checkPeople(Nic.getText()))
        {
            JOptionPane.showMessageDialog(null, "This Person is not Registered to take Vaccines yet");
        }
        
        else if(D01.equals(DoseNotTaken))
        {
            JOptionPane.showMessageDialog(null, "This Person is not yet taken the first Dose");
        }
        
        else if(D02.equals(DoseTaken))
        {
            JOptionPane.showMessageDialog(null, "This Person is already Fully Vaccinated");
        }
        
        else if(Name.getText().isBlank())
        {
            JOptionPane.showMessageDialog(null, "Name is Empty");
        }
        else if(DateChooser.getDate() == null)
        {
            JOptionPane.showMessageDialog(null, "Date is Empty");
        }
        else if(NameOfVaccine.getSelectedIndex() == 0)
        {
            JOptionPane.showMessageDialog(null, "Select the Vaccine name");
        }
        else if(PlaceV.getText().isBlank())
        {
            JOptionPane.showMessageDialog(null, "Place of Vaccination is Empty");
        }
        
        else
        {

            try {
            sql = "Update DoseStatus set SecondDoseDate = ?, SecondDoseStatus = ?, SecondDosePlace = ? Where Nic = '"+Nic.getText()+"'";
            pst = Conn.prepareStatement(sql);
                        
            
            java.util.Date date = DateChooser.getDate();
            java.sql.Date sqlDate = new java.sql.Date(date.getTime());
            pst.setDate(1, sqlDate);
            pst.setString(2,DoseTaken);
            pst.setString(3,PlaceV.getText());
            
            
            SecondDoseBTN.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/2nd_DoseNormalChecked.png"));
            SecondDoseBTN.setRolloverIcon(new ImageIcon("src/UI_Images/Register_DosePanel/2nd_DoseCheckedRoll.png"));
            
            JOptionPane.showMessageDialog(null, "Dose Data Update Successful!");
            pst.executeUpdate();
        } catch (SQLException ex) {
            Logger.getLogger(Register_Design.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, ex.toString());
        }
        }
    }//GEN-LAST:event_SecondDoseBTNActionPerformed

    private void NicKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NicKeyTyped

    }//GEN-LAST:event_NicKeyTyped

    private void NicKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NicKeyPressed
 

    }//GEN-LAST:event_NicKeyPressed

    private void NicKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NicKeyReleased
      FillDoseData(Nic.getText());
      FillName(Nic.getText());
      
      if(checkIDNic(Nic.getText()))
      {
          FillID(Nic.getText());
          IDphoto.setVisible(true);
          IDLBL.setVisible(true);
          VILBL.setVisible(true);
      }
      else
      {
          IDphoto.setVisible(false);
          IDLBL.setVisible(false);
      }
      System.out.println("Nic Scanning...");
      if(Nic.getText().isBlank() == false)
      {
          ClearBTN.setVisible(true);
      }
      else
      {
          ClearBTN.setVisible(false);
      }
    }//GEN-LAST:event_NicKeyReleased

    private void VaccineNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_VaccineNameFocusGained
        Focus = true;
        VaccineNameLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxFocus.png"));
    }//GEN-LAST:event_VaccineNameFocusGained

    private void VaccineNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_VaccineNameFocusLost
        Focus = false;
        VaccineNameLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxNormal.png"));
    }//GEN-LAST:event_VaccineNameFocusLost

    private void VaccineNameMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_VaccineNameMouseEntered
        if(!Focus)
        {
        VaccineNameLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxRoll.png"));
        }
    }//GEN-LAST:event_VaccineNameMouseEntered

    private void VaccineNameMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_VaccineNameMouseExited
        if(!Focus)
        {
        VaccineNameLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxNormal.png"));
        }
    }//GEN-LAST:event_VaccineNameMouseExited

    private void VaccineNameLBLMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_VaccineNameLBLMouseEntered
        if(!Focus)
        {
        VaccineNameLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxRoll.png"));
        }
    }//GEN-LAST:event_VaccineNameLBLMouseEntered

    private void VaccineNameLBLMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_VaccineNameLBLMouseExited
        if(!Focus)
        {
        VaccineNameLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxNormal.png"));
        }
    }//GEN-LAST:event_VaccineNameLBLMouseExited

    private void GIDFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_GIDFocusGained
        Focus = true;
        GidLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxFocus.png"));
    }//GEN-LAST:event_GIDFocusGained

    private void GIDFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_GIDFocusLost
        Focus = false;
        GidLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxNormal.png"));
    }//GEN-LAST:event_GIDFocusLost

    private void GIDMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GIDMouseEntered
        if(!Focus)
        {
        GidLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxRoll.png"));
        }
    }//GEN-LAST:event_GIDMouseEntered

    private void GIDMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GIDMouseExited
        if(!Focus)
        {
        GidLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxNormal.png"));
        }
    }//GEN-LAST:event_GIDMouseExited

    private void GidLBLMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GidLBLMouseEntered
        if(!Focus)
        {
        GidLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxNormal.png"));
        }
    }//GEN-LAST:event_GidLBLMouseEntered

    private void GidLBLMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GidLBLMouseExited
        if(!Focus)
        {
        GidLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxNormal.png"));
        }
    }//GEN-LAST:event_GidLBLMouseExited

    private void VaccQuantitiyFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_VaccQuantitiyFocusGained
        Focus = true;
        VaccQuantityLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxFocus.png"));
    }//GEN-LAST:event_VaccQuantitiyFocusGained

    private void VaccQuantitiyFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_VaccQuantitiyFocusLost
        Focus = false;
        VaccQuantityLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxNormal.png"));
    }//GEN-LAST:event_VaccQuantitiyFocusLost

    private void VaccQuantitiyMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_VaccQuantitiyMouseEntered
        if(!Focus)
        {
        VaccQuantityLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxRoll.png"));
        }
    }//GEN-LAST:event_VaccQuantitiyMouseEntered

    private void VaccQuantitiyMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_VaccQuantitiyMouseExited
        if(!Focus)
        {
        VaccQuantityLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxNormal.png"));
        }
    }//GEN-LAST:event_VaccQuantitiyMouseExited

    private void VaccQuantityLBLMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_VaccQuantityLBLMouseEntered
        if(!Focus)
        {
        VaccQuantityLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxRoll.png"));
        }
    }//GEN-LAST:event_VaccQuantityLBLMouseEntered

    private void VaccQuantityLBLMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_VaccQuantityLBLMouseExited
        if(!Focus)
        {
        VaccQuantityLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxNormal.png"));
        }
    }//GEN-LAST:event_VaccQuantityLBLMouseExited

    private void MfdDateChooserFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_MfdDateChooserFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_MfdDateChooserFocusGained

    private void MfdDateChooserFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_MfdDateChooserFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_MfdDateChooserFocusLost

    private void MfdDateChooserMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MfdDateChooserMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_MfdDateChooserMouseEntered

    private void ExpDateChooserFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ExpDateChooserFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_ExpDateChooserFocusGained

    private void ExpDateChooserFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ExpDateChooserFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_ExpDateChooserFocusLost

    private void ExpDateChooserMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExpDateChooserMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_ExpDateChooserMouseEntered

    private boolean checkVaccines(String G_id)
    {
        boolean chkGid = false;
        String query = "SELECT * FROM Vaccines WHERE GID = ?";
        
        try {
            pst = Conn.prepareStatement(query);
            pst.setString(1, G_id);
            
            rs = pst.executeQuery();
            
            if(rs.next())
            {
                chkGid = true;
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.toString());
        }
        
        return chkGid;
    }
    
    private boolean checkIDNic(String ChNic)    
    {

        boolean checknic = false;
        String sql4 = "SELECT * FROM vaccinationid WHERE Nic =?";
        ResultSet rs4;
        try {
            pst = Conn.prepareStatement(sql4);
            pst.setString(1, ChNic);
            
            rs4 = pst.executeQuery();
            
            if(rs4.next())
            {
                checknic = true;
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.toString());
        }
         return checknic;
    }
    
    private void VaccInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VaccInsertActionPerformed
        
        if(GID.getText().isBlank())
        {
            JOptionPane.showMessageDialog(null, "Group is Empty");
        }
        else if(checkVaccines(GID.getText()))
        {
            JOptionPane.showMessageDialog(null, "This Person is not Registered for take Vaccines yet");
        }
        
        else if(VaccineName.getSelectedIndex() == 0)
        {
            JOptionPane.showMessageDialog(null, "Select the Vaccine name");
        }
        else if(VaccQuantitiy.getText().isBlank())
        {
            JOptionPane.showMessageDialog(null, "Quantitiy is Empty");
        }
        
        else if(MfdDateChooser.getDate() == null)
        {
            JOptionPane.showMessageDialog(null, "Manufacture Date is Empty");
        }
        
        else if(ExpDateChooser.getDate() == null)
        {
            JOptionPane.showMessageDialog(null, "Expiration Date is Empty");
        }
                
        else if(Cost.getText().isBlank())
        {
            JOptionPane.showMessageDialog(null, "Cost is Empty");
        }
                
        else
        {
            try {
            sql = "insert into Vaccines values(?,?,?,?,?,?)";
            pst = Conn.prepareStatement(sql);
                        
            pst.setString(1, GID.getText());
            pst.setString(2, VaccineName.getSelectedItem().toString());
            pst.setInt(3, Integer.valueOf(VaccQuantitiy.getText()));
            
            java.util.Date date = MfdDateChooser.getDate();
            java.sql.Date sqlDate = new java.sql.Date(date.getTime());
            pst.setDate(4, sqlDate);
            
            java.util.Date date2 = MfdDateChooser.getDate();
            java.sql.Date sqlDate2 = new java.sql.Date(date2.getTime());
            pst.setDate(5, sqlDate2);
            
            pst.setDouble(6, Double.valueOf(Cost.getText()));
            
            
            JOptionPane.showMessageDialog(null, "Data Input Successful!");
            pst.executeUpdate();
        } catch (SQLException ex) {
            Logger.getLogger(Register_Design.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, ex.toString());
        }
        }
    }//GEN-LAST:event_VaccInsertActionPerformed

    private void CostFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CostFocusGained
        Focus = true;
        CostLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxFocus.png"));
    }//GEN-LAST:event_CostFocusGained

    private void CostFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CostFocusLost
        Focus = false;
        CostLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxNormal.png"));
    }//GEN-LAST:event_CostFocusLost

    private void CostMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CostMouseEntered
        if(!Focus)
        {
        CostLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxRoll.png"));
        }
    }//GEN-LAST:event_CostMouseEntered

    private void CostMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CostMouseExited
        if(!Focus)
        {
        CostLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxNormal.png"));
        }
    }//GEN-LAST:event_CostMouseExited

    private void CostLBLMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CostLBLMouseEntered
        if(!Focus)
        {
        CostLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxRoll.png"));
        }
    }//GEN-LAST:event_CostLBLMouseEntered

    private void CostLBLMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CostLBLMouseExited
        if(!Focus)
        {
        CostLBL.setIcon(new ImageIcon("src/UI_Images/Register_DosePanel/DTextBoxNormal.png"));
        }
    }//GEN-LAST:event_CostLBLMouseExited

    private void VaccImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VaccImportActionPerformed
        
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Excel File", ".xlsx","xlsx");
	fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);

        fileChooser.addChoosableFileFilter(filter);
        fileChooser.setFileFilter(filter);
        int result = fileChooser.showSaveDialog(null);
        if(result == JFileChooser.APPROVE_OPTION){
            File selectedFile = fileChooser.getSelectedFile();
            excelFilePath = selectedFile.getAbsolutePath();

        }
        else if(result == JFileChooser.CANCEL_OPTION){
            System.out.println("No Data");
        }
        

        int batchSize = 20;
 
        try {
            long start = System.currentTimeMillis();
             
            FileInputStream inputStream = new FileInputStream(excelFilePath);
 
            try (Workbook workbook = new XSSFWorkbook(inputStream)) {
                Sheet firstSheet = workbook.getSheetAt(0);
                Iterator<Row> rowIterator = firstSheet.iterator();
                
                
                Conn.setAutoCommit(false);
                
                sql = "INSERT INTO Vaccines (GID, VaccName, Quantity, Mfd, Exp, Cost) VALUES (?, ?, ?, ?, ?, ?)";
                pst = Conn.prepareStatement(sql);
                
                int count = 0;
                
                rowIterator.next(); // skip the header row
                
                while (rowIterator.hasNext()) {
                    Row nextRow = rowIterator.next();
                    Iterator<Cell> cellIterator = nextRow.cellIterator();
                    
                    while (cellIterator.hasNext()) {
                        Cell nextCell = cellIterator.next();
                        
                        int columnIndex = nextCell.getColumnIndex();
                        
                        switch (columnIndex) {
                            case 0 -> {
                                String gid = nextCell.getStringCellValue();
                                pst.setString(1, gid);
                            }
                            case 1 -> {
                                //java.util.Date enrollDate = nextCell.getDateCellValue();
                                //pst.setTimestamp(2, new Timestamp(enrollDate.getTime()));
                                String Vname = nextCell.getStringCellValue();
                                pst.setString(2, Vname);
                            }
                            case 2 -> {
                                int Qua = (int) nextCell.getNumericCellValue();
                                pst.setInt(3, Qua);
                            }
                                
                            case 3 -> {    
                                java.util.Date expDate = nextCell.getDateCellValue();
                                java.sql.Date ExpDate = new java.sql.Date(expDate.getTime());
                                pst.setDate(4, ExpDate);
                            }
                            case 4 -> {
                                java.util.Date mfdDate = nextCell.getDateCellValue();
                                java.sql.Date MfdDate = new java.sql.Date(mfdDate.getTime());
                                pst.setDate(5, MfdDate);
                            }
                            case 5 -> {
                                Double cost = nextCell.getNumericCellValue();
                                pst.setDouble(6, cost);
                            }

                        }
                        
                    }
 
                    pst.addBatch();
                    
                    if (count % batchSize == 0) {
                        pst.executeBatch();
                    }
                    
                }
            }
             
            // execute the remaining queries
            pst.executeBatch();
  
            Conn.commit();
            //Conn.close();
             
            long end = System.currentTimeMillis();
            System.out.printf("Import done in %d ms\n", (end - start));
            JOptionPane.showMessageDialog(null, "Import Successful!");
             
        } catch (IOException ex1) {
            System.out.println("Error reading file");
            ex1.printStackTrace();
        } catch (SQLException ex2) {
            System.out.println("Database error");
            ex2.printStackTrace();
        }
    }//GEN-LAST:event_VaccImportActionPerformed

    private void ClearBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearBTNActionPerformed
        Nic.setText("");
        ClearDosePanel();
    }//GEN-LAST:event_ClearBTNActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BG;
    private javax.swing.JLabel BGpeople;
    private javax.swing.JButton ClearBTN;
    private javax.swing.JTextField Cost;
    private javax.swing.JLabel CostLBL;
    private com.toedter.calendar.JDateChooser DateChooser;
    private javax.swing.JPanel DoseStatus;
    private com.toedter.calendar.JDateChooser ExpDateChooser;
    private javax.swing.JButton FirstDoseBTN;
    private javax.swing.JTextField GID;
    private javax.swing.JLabel GidLBL;
    private javax.swing.JLabel IDLBL;
    private javax.swing.JLabel IDphoto;
    private javax.swing.JLabel MainWigdetLBL3;
    private com.toedter.calendar.JDateChooser MfdDateChooser;
    private javax.swing.JTextField Name;
    private javax.swing.JLabel NameLBL;
    private javax.swing.JComboBox<String> NameOfVaccine;
    private javax.swing.JLabel NamesLBL;
    private javax.swing.JTextField Nic;
    private javax.swing.JLabel NicLBL;
    private javax.swing.JLabel NovLBL;
    private javax.swing.JTextField P_Age;
    private javax.swing.JLabel P_AgeLBL;
    private javax.swing.JComboBox<String> P_District;
    private javax.swing.JLabel P_DistrictLBL;
    private javax.swing.JLabel P_DiviLBL;
    private javax.swing.JComboBox<String> P_Division;
    private javax.swing.JTextField P_FName;
    private javax.swing.JLabel P_FNameLBL;
    private javax.swing.JLabel P_GNDLBL;
    private javax.swing.JComboBox<String> P_GNDivision;
    private javax.swing.JButton P_ImportBTN;
    private javax.swing.JButton P_InsertBTN;
    private javax.swing.JTextField P_Nic;
    private javax.swing.JLabel P_NicLBL;
    private javax.swing.JTextField P_Number;
    private javax.swing.JLabel P_NumberLBL;
    private javax.swing.JPanel People;
    private javax.swing.JTextField PlaceV;
    private javax.swing.JLabel PovLBL;
    private javax.swing.JPanel RegisterPanel;
    private javax.swing.JButton SecondDoseBTN;
    public javax.swing.JTabbedPane TabbedPane;
    private javax.swing.JLabel VBG;
    private javax.swing.JLabel VILBL;
    private javax.swing.JButton VaccImport;
    private javax.swing.JButton VaccInsert;
    private javax.swing.JTextField VaccQuantitiy;
    private javax.swing.JLabel VaccQuantityLBL;
    private javax.swing.JComboBox<String> VaccineName;
    private javax.swing.JLabel VaccineNameLBL;
    public javax.swing.JPanel Vaccines;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
