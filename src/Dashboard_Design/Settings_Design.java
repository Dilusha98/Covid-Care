/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Dashboard_Design;

import static Dashboard_Design.Home_Design.Conn;
import static Dashboard_Design.SendAlert_Design.SmsPassword;
import javax.swing.ImageIcon;
import static Dashboard_Design.SendAlert_Design.SmsUsername;
import Main.DBConnection;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Darkheart
 */
public class Settings_Design extends javax.swing.JPanel {
    
    public static Connection Conn = null;
    public Statement stmt = null;
    public PreparedStatement pst = null;
    public String sql = "";
    public ResultSet rs = null;
    private String ID;
    private String Uname;
    private String Email;
    private String Role;
    
    /**
     * Creates new form Settings_Design
     */
    public Settings_Design() {
        initComponents();
        Conn = DBConnection.getconn();
        ReadConfig();
        updateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SettingsPanel = new javax.swing.JPanel();
        TabbedPane = new javax.swing.JTabbedPane();
        GeneralSettingsPNL = new javax.swing.JPanel();
        SmsPass = new javax.swing.JTextField();
        SmsUname = new javax.swing.JTextField();
        MailPass = new javax.swing.JTextField();
        MailUname = new javax.swing.JTextField();
        Apply = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        UsersSettingsPNL = new javax.swing.JPanel();
        RemoveUser = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        UsersTable = new rojeru_san.complementos.RSTableMetro();
        ChangeRole = new javax.swing.JComboBox<>();
        MainWigdetLBL6 = new javax.swing.JLabel();

        setMinimumSize(new java.awt.Dimension(950, 510));
        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(950, 510));

        SettingsPanel.setMinimumSize(new java.awt.Dimension(950, 510));
        SettingsPanel.setOpaque(false);
        SettingsPanel.setPreferredSize(new java.awt.Dimension(950, 510));
        SettingsPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TabbedPane.setBackground(new java.awt.Color(255, 255, 255));

        GeneralSettingsPNL.setBackground(new java.awt.Color(255, 255, 255));
        GeneralSettingsPNL.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        GeneralSettingsPNL.add(SmsPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 140, 170, -1));
        GeneralSettingsPNL.add(SmsUname, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 80, 170, -1));

        MailPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MailPassActionPerformed(evt);
            }
        });
        GeneralSettingsPNL.add(MailPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 330, 170, -1));
        GeneralSettingsPNL.add(MailUname, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 270, 170, -1));

        Apply.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI_Images/Settings/ApplyBTNNormal.png"))); // NOI18N
        Apply.setToolTipText("");
        Apply.setBorder(null);
        Apply.setContentAreaFilled(false);
        Apply.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/UI_Images/Settings/ApplyBTNSelect.png"))); // NOI18N
        Apply.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/UI_Images/Settings/ApplyBTNRoll.png"))); // NOI18N
        Apply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ApplyActionPerformed(evt);
            }
        });
        GeneralSettingsPNL.add(Apply, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 380, -1, 50));

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI_Images/Settings/settings bg.png"))); // NOI18N
        GeneralSettingsPNL.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 880, 370));

        TabbedPane.addTab("General", new javax.swing.ImageIcon(getClass().getResource("/Icons/Icon settings.png")), GeneralSettingsPNL); // NOI18N

        UsersSettingsPNL.setBackground(new java.awt.Color(255, 255, 255));
        UsersSettingsPNL.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        RemoveUser.setText("Remove");
        RemoveUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveUserActionPerformed(evt);
            }
        });
        UsersSettingsPNL.add(RemoveUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 212, 110, 30));

        UsersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        UsersTable.setColorBackgoundHead(new java.awt.Color(102, 102, 255));
        UsersTable.setColorBordeFilas(new java.awt.Color(255, 255, 255));
        UsersTable.setColorBordeHead(new java.awt.Color(255, 255, 255));
        UsersTable.setColorFilasBackgound1(new java.awt.Color(204, 204, 204));
        UsersTable.setColorFilasForeground1(new java.awt.Color(0, 0, 0));
        UsersTable.setColorFilasForeground2(new java.awt.Color(0, 0, 0));
        UsersTable.setColorSelBackgound(new java.awt.Color(0, 51, 204));
        UsersTable.setDoubleBuffered(true);
        UsersTable.setFuenteFilas(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        UsersTable.setFuenteFilasSelect(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        UsersTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UsersTableMouseClicked(evt);
            }
        });
        UsersTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                UsersTableKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                UsersTableKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(UsersTable);
        if (UsersTable.getColumnModel().getColumnCount() > 0) {
            UsersTable.getColumnModel().getColumn(1).setMinWidth(100);
            UsersTable.getColumnModel().getColumn(2).setMinWidth(200);
            UsersTable.getColumnModel().getColumn(2).setPreferredWidth(200);
            UsersTable.getColumnModel().getColumn(2).setMaxWidth(200);
            UsersTable.getColumnModel().getColumn(3).setMinWidth(80);
            UsersTable.getColumnModel().getColumn(3).setPreferredWidth(80);
            UsersTable.getColumnModel().getColumn(3).setMaxWidth(80);
        }

        UsersSettingsPNL.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, 610, 370));

        ChangeRole.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Change Role", "Admin", "User" }));
        ChangeRole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChangeRoleActionPerformed(evt);
            }
        });
        UsersSettingsPNL.add(ChangeRole, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 142, 110, 30));

        TabbedPane.addTab("Users", new javax.swing.ImageIcon(getClass().getResource("/Icons/Icon users.png")), UsersSettingsPNL); // NOI18N

        SettingsPanel.add(TabbedPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 900, 460));

        MainWigdetLBL6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI_Images/DashNormalWidget/DashMainWidget.png"))); // NOI18N
        MainWigdetLBL6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                MainWigdetLBL6MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                MainWigdetLBL6MouseExited(evt);
            }
        });
        SettingsPanel.add(MainWigdetLBL6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 6, 930, 490));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 950, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(SettingsPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 516, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(SettingsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void MainWigdetLBL6MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MainWigdetLBL6MouseEntered
        MainWigdetLBL6.setIcon(new ImageIcon("src/UI_Images/DashRolloverWidget/DashMainWigdetRollover.png"));
    }//GEN-LAST:event_MainWigdetLBL6MouseEntered

    private void MainWigdetLBL6MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MainWigdetLBL6MouseExited
        MainWigdetLBL6.setIcon(new ImageIcon("src/UI_Images/DashNormalWidget/DashMainWidget.png"));
    }//GEN-LAST:event_MainWigdetLBL6MouseExited

    private void ApplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ApplyActionPerformed

        WriteConfigFile();
        
    }//GEN-LAST:event_ApplyActionPerformed

    private void RemoveUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveUserActionPerformed
         
        try {
            stmt = Conn.createStatement();
            sql = "Delete From Users where ID = '"+ID+"'";
            stmt.executeUpdate(sql);
            JOptionPane.showMessageDialog(null, "User Removed!");
            updateTable();
            
        }
            
        catch(SQLException obj)
        {
            JOptionPane.showMessageDialog(null, obj.toString());
        }
    }//GEN-LAST:event_RemoveUserActionPerformed

    private void UsersTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UsersTableMouseClicked
        
    }//GEN-LAST:event_UsersTableMouseClicked

    private void UsersTableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_UsersTableKeyPressed

    }//GEN-LAST:event_UsersTableKeyPressed

    private void ChangeRoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChangeRoleActionPerformed
        
        DefaultTableModel model = (DefaultTableModel)UsersTable.getModel();

        // get the selected row index
        int selectedRowIndex = UsersTable.getSelectedRow();
       
        // set the selected row data into variables
        
        ID = (model.getValueAt(selectedRowIndex, 0).toString());
        
        
        try {
            stmt = Conn.createStatement();
            sql = "update Users set Role = '"+ChangeRole.getSelectedItem().toString()+"' where ID = '"+ID+"'";
            stmt.executeUpdate(sql);
            JOptionPane.showMessageDialog(null, "User Role Changed!");
            updateTable();
            
        }
            
        catch(SQLException obj)
        {
            JOptionPane.showMessageDialog(null, obj.toString());
        }
    }//GEN-LAST:event_ChangeRoleActionPerformed

    private void UsersTableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_UsersTableKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) 
        {
            updateUsers();
            System.out.println("UtableKeyReleased()");
        }
    }//GEN-LAST:event_UsersTableKeyReleased

    private void MailPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MailPassActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MailPassActionPerformed

    public void updateUsers()
    {
        
        DefaultTableModel model = (DefaultTableModel)UsersTable.getModel();

        // get the selected row index
        int selectedRowIndex = UsersTable.getSelectedRow();
       
        // set the selected row data into variables
        
        ID = (model.getValueAt(selectedRowIndex, 0).toString());
        Uname = (model.getValueAt(selectedRowIndex, 1).toString());
        Email = (model.getValueAt(selectedRowIndex, 2).toString());
        Role = (model.getValueAt(selectedRowIndex, 3).toString());
        
        
        
        try {
            stmt = Conn.createStatement();
            sql = "update Users set Uname = '"+Uname+"',Email = '"+Email+"',Role = '"+Role+"' where ID = '"+ID+"'";
            stmt.executeUpdate(sql);
            JOptionPane.showMessageDialog(null, "Users Data Updated!");
            updateTable();
            
        }
            
        catch(SQLException obj)
        {
            JOptionPane.showMessageDialog(null, obj.toString());
        }
    }
    
    private void ReadConfig()
    {
        BufferedReader br = null;
        try {
            File file = new File("Config.txt"); // java.io.File
            FileReader fr = new FileReader(file); // java.io.FileReader
            br = new BufferedReader(fr); // java.io.BufferedReader
            String line;
            while ((line = br.readLine()) != null) 
            {
              // process the line

		if (line.startsWith("MailUN")) 
                { // check for a value (string starting with "")
                    
                    MailUname.setText(line.substring(6).trim()); 
                    
		}
              
                if (line.startsWith("MailPW")) 
                { // check for a value (string starting with "")
                    
                    MailPass.setText(line.substring(6).trim()); 
                    
		}
                
                if (line.startsWith("SmsUN")) 
                { // check for a value (string starting with "")
                    
                    SmsUname.setText(line.substring(5).trim()); 
		}
              
                if (line.startsWith("SmsPW")) 
                { // check for a value (string starting with "")
                    
                    SmsPass.setText(line.substring(5).trim()); 
                    
		}
                
            }
          }
          catch(IOException e) { e.printStackTrace();}
          finally
          {
              try { if (br != null) {
                  br.close();
              } }
              catch(IOException e) { e.printStackTrace(); }
          }
        
    }
    
    public void WriteConfigFile()
    {
         try 
         {
             try (FileWriter writer = new FileWriter("Config.txt", false)) 
             {
                 
                 writer.write("SmsUN"+SmsUname.getText());
                 writer.write("\r\n");   // write new line
                 writer.write("SmsPW"+SmsPass.getText());
                 writer.write("\r\n");   // write new line
                 writer.write("MailUN"+MailUname.getText());
                 writer.write("\r\n");   // write new line
                 writer.write("MailPW"+MailPass.getText());
                 
                 JOptionPane.showMessageDialog(null, "Settings Applied Successfully!");
             }
            
        } 
         catch (IOException e) {
            e.printStackTrace();
        }
    }

    public void updateTable()
    {
        sql = "SELECT ID,Uname,Email,Role FROM `users`";
        try 
        {
            pst = Conn.prepareStatement(sql);
            rs = pst.executeQuery();
            UsersTable.setModel(DbUtils.resultSetToTableModel(rs));
            UsersTable.getColumnModel().getColumn(2).setPreferredWidth(200);
            UsersTable.getColumnModel().getColumn(3).setPreferredWidth(80);
            
        } 
        catch (SQLException e) 
        {
            JOptionPane.showMessageDialog(null, e);
        }
        finally{
            try
            {
            rs.close();
            //stmt.close();
            }

            catch (SQLException e)
            {
            JOptionPane.showMessageDialog(null, e);
            }
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Apply;
    private javax.swing.JComboBox<String> ChangeRole;
    private javax.swing.JPanel GeneralSettingsPNL;
    private javax.swing.JTextField MailPass;
    private javax.swing.JTextField MailUname;
    private javax.swing.JLabel MainWigdetLBL6;
    private javax.swing.JButton RemoveUser;
    private javax.swing.JPanel SettingsPanel;
    private javax.swing.JTextField SmsPass;
    private javax.swing.JTextField SmsUname;
    public javax.swing.JTabbedPane TabbedPane;
    private javax.swing.JPanel UsersSettingsPNL;
    private rojeru_san.complementos.RSTableMetro UsersTable;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
